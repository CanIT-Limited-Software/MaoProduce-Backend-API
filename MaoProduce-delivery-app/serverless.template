{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "AWS Serverless API that exposes the add, remove and get operations for a platform using Amazon DynamoDB.",
  "Parameters": {
    "ShouldCreateTable": {
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "If true then the DynamoDB tables will be created with the CloudFormation stack."
    },
    "CustomerTableName": {
      "Type": "String",
      "Description": "Name of DynamoDB table used to store the customer post. If left blank a new table will be created.",
      "MinLength": "0"
    },
    "OrderTableName": {
      "Type": "String",
      "Description": "Name of DynamoDB table used to store the order post. If left blank a new table will be created.",
      "MinLength": "0"
    },
    "ProductTableName": {
      "Type": "String",
      "Description": "Name of DynamoDB table used to store the product post. If left blank a new table will be created.",
      "MinLength": "0"
    },
    "ReadCapacity": {
      "Type": "Number",
      "Description": "Read capacity for the DynamoDB tables.",
      "Default": "3",
      "MinValue": 1
    },
    "WriteCapacity": {
      "Type": "Number",
      "Description": "Write capacity for the DynamoDB tables.",
      "Default": "3",
      "MinValue": 1
    }
  },
  "Conditions": {
    "CreateCustomerTable": {
      "Fn::Equals": [
        {
          "Ref": "ShouldCreateTable"
        },
        "true"
      ]
    },
    "CreateOrderTable": {
      "Fn::Equals": [
        {
          "Ref": "ShouldCreateTable"
        },
        "true"
      ]
    },
    "CreateProductTable": {
      "Fn::Equals": [
        {
          "Ref": "ShouldCreateTable"
        },
        "true"
      ]
    },
    "CustomerTableGenerated": {
      "Fn::Equals": [
        {
          "Ref": "CustomerTableName"
        },

        ""
      ]
    },
    "OrderTableGenerated": {
      "Fn::Equals": [
        {
          "Ref": "OrderTableName"
        },

        ""
      ]
    },
    "ProductTableGenerated": {
      "Fn::Equals": [
        {
          "Ref": "ProductTableName"
        },

        ""
      ]
    }
  },
  "Resources": {
    "GetCustomers": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.CustomerFunctions::GetCustomersAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to get a list of customers",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "CustomerTable": {
              "Fn::If": [
                "CreateCustomerTable",
                {
                  "Ref": "CustomerTable"
                },
                {
                  "Ref": "CustomerTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Customers/",
              "Method": "GET"
            }
          }
        }
      }
    },
    "GetCustomer": {    
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.CustomerFunctions::GetCustomerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to get a single customer",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "CustomerTable": {
              "Fn::If": [
                "CreateCustomerTable",
                {
                  "Ref": "CustomerTable"
                },
                {
                  "Ref": "CustomerTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Customers/{Id}",
              "Method": "GET"
            }
          }
        }
      }
    },
    "AddCustomer": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.CustomerFunctions::AddCustomerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to add a new customer",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "CustomerTable": {
              "Fn::If": [
                "CreateCustomerTable",
                {
                  "Ref": "CustomerTable"
                },
                {
                  "Ref": "CustomerTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Customers/",
              "Method": "PUT"
            }
          }
        }
      }
    },
    "UpdateCustomer": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.CustomerFunctions::UpdateCustomerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to update customer details after editing at front end",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "CustomerTable": {
              "Fn::If": [
                "CreateCustomerTable",
                {
                  "Ref": "CustomerTable"
                },
                {
                  "Ref": "CustomerTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Customers/{Id}",
              "Method": "PATCH"
            }
          }
        }
      }
    },
    "RemoveCustomer": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.CustomerFunctions::RemoveCustomerAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to remove a customer",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "CustomerTable": {
              "Fn::If": [
                "CreateCustomerTable",
                {
                  "Ref": "CustomerTable"
                },
                {
                  "Ref": "CustomerTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Customers/{Id}",
              "Method": "DELETE"
            }
          }
        }
      }
    },
    "CustomerTable": {
      "Type": "AWS::DynamoDB::Table",
      "Condition": "CreateCustomerTable",
      "Properties": {
        "TableName": {
          "Fn::If": [
            "CustomerTableGenerated",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "CustomerTableName"
            }
          ]
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "Id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "Id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": {
            "Ref": "ReadCapacity"
          },
          "WriteCapacityUnits": {
            "Ref": "WriteCapacity"
          }
        }
      }
    },
    "GetOrders": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.OrderFunctions::GetOrdersAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to get a list of orders",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "OrderTable": {
              "Fn::If": [
                "CreateOrderTable",
                {
                  "Ref": "OrderTable"
                },
                {
                  "Ref": "OrderTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Orders/",
              "Method": "GET"
            }
          }
        }
      }
    },
    "GetOrder": {    
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.OrderFunctions::GetOrderAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to get a single order",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "OrderTable": {
              "Fn::If": [
                "CreateOrderTable",
                {
                  "Ref": "OrderTable"
                },
                {
                  "Ref": "OrderTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Orders/{Id}",
              "Method": "GET"
            }
          }
        }
      }
    },
    "AddOrder": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.OrderFunctions::AddOrderAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to add a order",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "OrderTable": {
              "Fn::If": [
                "CreateOrderTable",
                {
                  "Ref": "CustomerTable"
                },
                {
                  "Ref": "OrderTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Orders/",
              "Method": "PUT"
            }
          }
        }
      }
    },
    "UpdateOrder": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.OrderFunctions::UpdateOrderAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to update order details after editing at front end",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "OrderTable": {
              "Fn::If": [
                "CreateOrderTable",
                {
                  "Ref": "OrderTable"
                },
                {
                  "Ref": "OrderTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Orders/{Id}",
              "Method": "PATCH"
            }
          }
        }
      }
    },
    "RemoveOrder": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.OrderFunctions::RemoveOrderAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to remove a order",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "OrderTable": {
              "Fn::If": [
                "CreateOrderTable",
                {
                  "Ref": "OrderTable"
                },
                {
                  "Ref": "OrderTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Orders/{Id}",
              "Method": "DELETE"
            }
          }
        }
      }
    },
    "OrderTable": {
      "Type": "AWS::DynamoDB::Table",
      "Condition": "CreateOrderTable",
      "Properties": {
        "TableName": {
          "Fn::If": [
            "OrderTableGenerated",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "OrderTableName"
            }
          ]
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "CustomerId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "CustomerId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": {
            "Ref": "ReadCapacity"
          },
          "WriteCapacityUnits": {
            "Ref": "WriteCapacity"
          }
        }
      }
    },
    "GetProducts": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.ProductFunctions::GetProductsAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to get a list of products",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "ProductTable": {
              "Fn::If": [
                "CreateProductTable",
                {
                  "Ref": "ProductTable"
                },
                {
                  "Ref": "ProductTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Products/",
              "Method": "GET"
            }
          }
        }
      }
    },
    "GetProduct": {    
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.ProductFunctions::GetProductAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to get a single product",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "ProductTable": {
              "Fn::If": [
                "CreateProductTable",
                {
                  "Ref": "ProductTable"
                },
                {
                  "Ref": "ProductTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Products/{Id}",
              "Method": "GET"
            }
          }
        }
      }
    },
    "AddProduct": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.ProductFunctions::AddProductAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to add a product",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "ProductTable": {
              "Fn::If": [
                "CreateProductTable",
                {
                  "Ref": "ProductTable"
                },
                {
                  "Ref": "ProductTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Products/",
              "Method": "PUT"
            }
          }
        }
      }
    },
    "UpdateProduct": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.ProductFunctions::UpdateProductAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to update product details after editing at front end",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "ProductTable": {
              "Fn::If": [
                "CreateProductTable",
                {
                  "Ref": "ProductTable"
                },
                {
                  "Ref": "ProductTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Products/{Id}",
              "Method": "PATCH"
            }
          }
        }
      }
    },
    "RemoveProduct": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "MaoProduce-delivery-app::MaoProduce_delivery_app.ProductFunctions::RemoveProductAsync",
        "Runtime": "dotnetcore3.1",
        "CodeUri": "",
        "Description": "Function to remove a product",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": null,
        "Policies": [
          "AWSLambdaFullAccess"
        ],
        "Environment": {
          "Variables": {
            "ProductTable": {
              "Fn::If": [
                "CreateProductTable",
                {
                  "Ref": "ProductTable"
                },
                {
                  "Ref": "ProductTableName"
                }
              ]
            }
          }
        },
        "Events": {
          "PutResource": {
            "Type": "Api",
            "Properties": {
              "Path": "/Products/{Id}",
              "Method": "DELETE"
            }
          }
        }
      }
    },
    "ProductTable": {
      "Type": "AWS::DynamoDB::Table",
      "Condition": "CreateProductTable",
      "Properties": {
        "TableName": {
          "Fn::If": [
            "ProductTableGenerated",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "Ref": "ProductTableName"
            }
          ]
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "Id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "Id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": {
            "Ref": "ReadCapacity"
          },
          "WriteCapacityUnits": {
            "Ref": "WriteCapacity"
          }
        }
      }
    }
  },
  "Outputs": {
    "CustomerTable": {
      "Value": {
        "Fn::If": [
          "CreateCustomerTable",
          {
            "Ref": "CustomerTable"
          },
          {
            "Ref": "CustomerTableName"
          }
        ]
      }
    },
    "OrderTable": {
      "Value": {
        "Fn::If": [
          "CreateOrderTable",
          {
            "Ref": "OrderTable"
          },
          {
            "Ref": "OrderTableName"
          }
        ]
      }
    },
    "ProductTable": {
      "Value": {
        "Fn::If": [
          "CreateProductTable",
          {
            "Ref": "ProductTable"
          },
          {
            "Ref": "ProductTableName"
          }
        ]
      }
    }
  }
}